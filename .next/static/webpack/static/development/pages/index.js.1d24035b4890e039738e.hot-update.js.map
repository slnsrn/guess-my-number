{"version":3,"file":"static/webpack/static/development/pages/index.js.1d24035b4890e039738e.hot-update.js","sources":["webpack:///./components/GameBoard.tsx"],"sourcesContent":["import { useContext, useState, useEffect } from 'react'\n\nimport {GameContext} from '../context/GameContext'\nimport useUtils from '../hooks/useUtils'\n\nimport GuessRow from './GuessRow'\nimport Button from './Button'\nimport SettingsTool from './SettingsTool'\nimport NumberSign from './NumberSign'\nimport PartyBackground from './PartyBackground'\nimport Confetti from './Confetti'\n\nimport Guess from '../types/Guess'\nimport GuessResult from '../types/GuessResult'\n\n\nconst defaultGuess:Guess = {value:[], round:1, result:{}, passed:false}\n\nconst createControlArray =(numberArray:{value: string, hidden:boolean}[])=>{\n    return numberArray.map((n)=>{\n        return { value:n.value, checked:false}\n    })\n}\n\nexport default function GameBoard (){\n    const { digits, rounds, gameStarted, resetGame, numberArray, endGame, gameResult,} = useContext(GameContext)\n    const [guesses, setGuesses] = useState<Guess[]>([{...defaultGuess}])\n    const [partyModeOn, setPartyModeOn] = useState(false)\n    const { scrollTop } =useUtils()\n\n    useEffect(()=>{\n\n        setGuesses([{...defaultGuess}])\n\n    },[gameStarted])\n\n\n    const returnGuessRow = (guess:Guess)=> <GuessRow key={guess.round} guess={guess} guessNumber={guessNumber}/>\n\n    const guessNumber =(guessArray:string[])=>{\n        const controlArray = createControlArray(numberArray!)\n        let result:GuessResult={}\n\n        const remaining = guessArray.map((val:string, i:number)=>{\n            if(val === controlArray[i].value){\n                controlArray[i].checked = true\n                result.plus = result.plus? result.plus + 1 : 1\n            }else{\n                return val\n            }\n        })\n\n        controlArray.filter(el=>!el.checked).map(el=>{\n            if(remaining.includes(el.value)){\n                const index = remaining.findIndex(n=>n===el.value)\n                remaining.splice(index,1)\n                result.minus = result.minus? result.minus + 1 : 1\n            }\n        })\n\n        if(!result.minus && !result.plus){result.missed=true}\n\n        const guess:Guess = {\n            value: guessArray,\n            round: guesses.length,\n            result:result,\n            passed:true\n        }\n\n        const newList:Guess[]= guesses.concat()\n        newList.pop()\n        newList.push(guess)\n\n\n        if(result.plus === digits || rounds === guesses.length){\n            endGame(result.plus === digits)\n            scrollTop()\n        }else{\n            if(!rounds || guesses.length < rounds){\n                newList.push({...defaultGuess, round:guesses.length+1})\n            }\n        }\n\n        setGuesses(newList)\n\n    }\n    const remainingRounds = rounds - guesses.length\n\n    const myMessage = !gameResult\n                        ? ( gameStarted\n                                ? `You have ${rounds === 0 ? 'unlimited' : rounds} rounds to guess my number. Start writing your guess and see the results ;)`\n                                :'Set your preferences and start playing!')\n                        : `You have ${gameResult}!`\n\n  return (\n    <>\n        {partyModeOn && <PartyBackground/>}\n        <div className='px-4 py-6 lg:px-20 md:py-8 shadow bg-white w-full sm-grid-sm md:w-grid-md lg:w-grid-lg xl:w-grid-xl mx-auto'>\n            <div className=\"nes-container  px-4 py-6 lg:px-8 with-title\">\n                <p className=\"title\">A Cool's Game</p>\n                <div className=\" ml-12 md:ml-20 mt-12 md:mt-8 flex\">\n                    <div className=\"nes-balloon from-left\">\n                        <p className='text-sm md:text-base'>{myMessage}</p>\n                    </div>\n                </div>\n            <i className=\"-mt-8 nes-octocat animate\"></i>\n            {!gameResult && rounds !== 0 && remainingRounds <=2 && <span className='ml-2 nes-text is-error'>{`Ups! You have ${remainingRounds} rounds left.`}</span>}\n            {gameResult ==='won' && <Confetti/>}\n            <SettingsTool/>\n            <NumberSign/>\n            {gameStarted && <div>\n                {guesses.map(returnGuessRow)}\n                <div className='pt-8'><Button onClick={resetGame} label='Reset game'/></div>\n            </div>\n            }\n            </div>\n        </div>\n        <label className=\"w-full text-right mt-4\">\n            <input type=\"checkbox\" className=\"nes-checkbox is-dark\" checked={partyModeOn} onChange={()=>setPartyModeOn(prevMode=>{return !prevMode})} />\n            <span>Enable party mode</span>\n         </label>\n    </>)\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAKA;AAEA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AAMA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}