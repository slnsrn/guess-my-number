{"ast":null,"code":"var _jsxFileName = \"/Users/slnsrn/Documents/Projects/MyGames/GuessNumber/guess-my-number/components/GuessRow.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState, useEffect } from 'react';\nimport { GameContext } from '../context/GameContext';\nexport default function GuessRow({\n  guess,\n  guessNumber,\n  currentRound\n}) {\n  const {\n    digits,\n    giveHint,\n    hintsGiven\n  } = useContext(GameContext);\n  const {\n    round,\n    result,\n    value,\n    passed\n  } = guess;\n  const {\n    0: inputValue,\n    1: setInputValue\n  } = useState(value);\n  const {\n    0: hintGiven,\n    1: setHintGiven\n  } = useState(false);\n  const inputRef = React.createRef();\n\n  const handleUserKeyPress = event => {\n    const {\n      keyCode\n    } = event;\n\n    if (keyCode === 13 && !passed && inputValue.length === digits) {\n      guessNumber(inputValue);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleUserKeyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", handleUserKeyPress);\n    };\n  }, [handleUserKeyPress]);\n\n  const handleChange = value => {\n    value = value.replace(/\\D/g, '');\n    setInputValue(Array.from(value));\n  };\n\n  const handleClick = () => {\n    if (inputValue.length !== digits) return false;\n    guessNumber(inputValue);\n  };\n\n  const onHintClick = () => {\n    setHintGiven(true);\n    giveHint();\n  };\n\n  const onFocus = () => {\n    if (inputValue.length === 0 && hintGiven) {\n      setInputValue([...hintsGiven]);\n    }\n  };\n\n  const placeholder = Array.from({\n    length: digits\n  }, (item, i) => hintsGiven[i] || 'X').join(' ');\n  const id = `guessInput${round}`;\n  const showHint = !hintGiven && currentRound > 2 && hintsGiven.length < digits - 1;\n  return __jsx(\"div\", {\n    className: \"flex flex-col sm:flex-row mx-auto mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  });\n}","map":{"version":3,"sources":["/Users/slnsrn/Documents/Projects/MyGames/GuessNumber/guess-my-number/components/GuessRow.tsx"],"names":["React","useContext","useState","useEffect","GameContext","GuessRow","guess","guessNumber","currentRound","digits","giveHint","hintsGiven","round","result","value","passed","inputValue","setInputValue","hintGiven","setHintGiven","inputRef","createRef","handleUserKeyPress","event","keyCode","length","window","addEventListener","removeEventListener","handleChange","replace","Array","from","handleClick","onHintClick","onFocus","placeholder","item","i","join","id","showHint"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AAGA,SAAQC,WAAR,QAA0B,wBAA1B;AAIA,eAAe,SAASC,QAAT,CAAmB;AAACC,EAAAA,KAAD;AAAQC,EAAAA,WAAR;AAAqBC,EAAAA;AAArB,CAAnB,EAA8H;AAC3I,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA;AAApB,MAAkCV,UAAU,CAACG,WAAD,CAAlD;AACA,QAAM;AAACQ,IAAAA,KAAD;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB,MAAiCT,KAAvC;AACA,QAAM;AAAA,OAACU,UAAD;AAAA,OAAaC;AAAb,MAA4Bf,QAAQ,CAAWY,KAAX,CAA1C;AACA,QAAM;AAAA,OAACI,SAAD;AAAA,OAAYC;AAAZ,MAA0BjB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMkB,QAAQ,GAAGpB,KAAK,CAACqB,SAAN,EAAjB;;AAEE,QAAMC,kBAAkB,GAAIC,KAAD,IAAyB;AAClD,UAAM;AAAEC,MAAAA;AAAF,QAAcD,KAApB;;AACA,QAAIC,OAAO,KAAK,EAAZ,IAAkB,CAACT,MAAnB,IAA6BC,UAAU,CAACS,MAAX,KAAsBhB,MAAvD,EAA+D;AAC7DF,MAAAA,WAAW,CAACS,UAAD,CAAX;AACD;AACF,GALD;;AAOAb,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCL,kBAAnC;AAEA,WAAO,MAAM;AACXI,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCN,kBAAtC;AACD,KAFD;AAGD,GANQ,EAMN,CAACA,kBAAD,CANM,CAAT;;AAQA,QAAMO,YAAY,GAAIf,KAAD,IAAiB;AACpCA,IAAAA,KAAK,GAAGA,KAAK,CAACgB,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAR;AACAb,IAAAA,aAAa,CAACc,KAAK,CAACC,IAAN,CAAWlB,KAAX,CAAD,CAAb;AACD,GAHD;;AAKA,QAAMmB,WAAW,GAAE,MAAI;AACrB,QAAGjB,UAAU,CAACS,MAAX,KAAsBhB,MAAzB,EAAiC,OAAO,KAAP;AACjCF,IAAAA,WAAW,CAACS,UAAD,CAAX;AACD,GAHD;;AAKA,QAAMkB,WAAW,GAAG,MAAI;AACtBf,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAT,IAAAA,QAAQ;AACT,GAHD;;AAKA,QAAMyB,OAAO,GAAE,MAAI;AACjB,QAAGnB,UAAU,CAACS,MAAX,KAAqB,CAArB,IAA0BP,SAA7B,EAAuC;AAACD,MAAAA,aAAa,CAAC,CAAC,GAAGN,UAAJ,CAAD,CAAb;AAA+B;AACxE,GAFD;;AAIA,QAAMyB,WAAW,GAAGL,KAAK,CAACC,IAAN,CAAW;AAACP,IAAAA,MAAM,EAAChB;AAAR,GAAX,EAA2B,CAAC4B,IAAD,EAAMC,CAAN,KAAU3B,UAAU,CAAC2B,CAAD,CAAV,IAAe,GAApD,EAAyDC,IAAzD,CAA8D,GAA9D,CAApB;AAEA,QAAMC,EAAE,GAAE,aAAY5B,KAAM,EAA5B;AACA,QAAM6B,QAAQ,GAAG,CAACvB,SAAD,IAAcV,YAAY,GAAC,CAA3B,IAAgCG,UAAU,CAACc,MAAX,GAAoBhB,MAAM,GAAC,CAA5E;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAIH","sourcesContent":["\nimport React, { useContext, useState, useEffect } from 'react'\n\n\nimport {GameContext} from '../context/GameContext'\nimport Guess from '../types/Guess'\n\n\nexport default function GuessRow ({guess, guessNumber, currentRound}:{guess:Guess, currentRound:number, guessNumber: (value:string[])=>void}){\n  const { digits, giveHint, hintsGiven} = useContext(GameContext)\n  const {round, result, value, passed} = guess\n  const [inputValue, setInputValue]=useState<string[]>(value)\n  const [hintGiven, setHintGiven]=useState(false)\n  const inputRef = React.createRef<HTMLInputElement>()\n\n    const handleUserKeyPress = (event:KeyboardEvent) => {\n      const { keyCode } = event\n      if (keyCode === 13 && !passed && inputValue.length === digits) {\n        guessNumber(inputValue)\n      }\n    }\n\n    useEffect(() => {\n      window.addEventListener(\"keydown\", handleUserKeyPress);\n\n      return () => {\n        window.removeEventListener(\"keydown\", handleUserKeyPress);\n      };\n    }, [handleUserKeyPress])\n\n    const handleChange = (value: string)=>{\n      value = value.replace(/\\D/g, '')\n      setInputValue(Array.from(value))\n    }\n\n    const handleClick =()=>{\n      if(inputValue.length !== digits) return false\n      guessNumber(inputValue)\n    }\n\n    const onHintClick = ()=>{\n      setHintGiven(true)\n      giveHint()\n    }\n\n    const onFocus= ()=>{\n      if(inputValue.length ===0 && hintGiven){setInputValue([...hintsGiven])}\n    }\n\n    const placeholder = Array.from({length:digits},(item,i)=>hintsGiven[i]||'X').join(' ')\n\n    const id=`guessInput${round}`\n    const showHint = !hintGiven && currentRound>2 && hintsGiven.length < digits-1\n\n    return (\n      <div className='flex flex-col sm:flex-row mx-auto mb-6'>\n         \n      </div>)\n}\n\n"]},"metadata":{},"sourceType":"module"}