{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/slnsrn/Documents/Projects/MyGames/GuessNumber/guess-my-number/components/GameBoard.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useContext, useState, useEffect } from 'react';\nimport cx from 'classnames';\nimport { GameContext } from '../context/GameContext';\nimport useUtils from '../hooks/useUtils';\nimport GuessRow from './GuessRow';\nimport Button from './Button';\nimport SettingsTool from './SettingsTool';\nimport NumberSign from './NumberSign';\nimport PartyBackground from './PartyBackground';\nimport Confetti from './Confetti';\nvar defaultGuess = {\n  value: [],\n  round: 1,\n  result: {},\n  passed: false\n};\n\nvar createControlArray = function createControlArray(numberArray) {\n  return numberArray.map(function (n) {\n    return {\n      value: n.value,\n      checked: false\n    };\n  });\n};\n\nexport default function GameBoard() {\n  var _this = this;\n\n  var _useContext = useContext(GameContext),\n      digits = _useContext.digits,\n      rounds = _useContext.rounds,\n      gameStarted = _useContext.gameStarted,\n      resetGame = _useContext.resetGame,\n      numberArray = _useContext.numberArray,\n      endGame = _useContext.endGame,\n      gameResult = _useContext.gameResult,\n      setWindowValues = _useContext.setWindowValues;\n\n  var _useState = useState([_objectSpread({}, defaultGuess)]),\n      guesses = _useState[0],\n      setGuesses = _useState[1];\n\n  var _useState2 = useState(false),\n      partyModeOn = _useState2[0],\n      setPartyModeOn = _useState2[1];\n\n  var _useUtils = useUtils(),\n      scrollTop = _useUtils.scrollTop;\n\n  var returnGuessRow = function returnGuessRow(guess) {\n    return __jsx(GuessRow, {\n      key: guess.round,\n      guess: guess,\n      guessNumber: guessNumber,\n      currentRound: guesses.length,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 44\n      }\n    });\n  };\n\n  useEffect(function () {\n    if (window) {\n      set;\n    }\n  }, []);\n  useEffect(function () {\n    //reset the game\n    setGuesses([_objectSpread({}, defaultGuess)]);\n  }, [gameStarted]);\n\n  var guessNumber = function guessNumber(guessArray) {\n    var controlArray = createControlArray(numberArray);\n    var result = {};\n    var remaining = guessArray.map(function (val, i) {\n      if (val === controlArray[i].value) {\n        controlArray[i].checked = true;\n        result.plus = result.plus ? result.plus + 1 : 1;\n      } else {\n        return val;\n      }\n    });\n    controlArray.filter(function (el) {\n      return !el.checked;\n    }).map(function (el) {\n      if (remaining.includes(el.value)) {\n        var index = remaining.findIndex(function (n) {\n          return n === el.value;\n        });\n        remaining.splice(index, 1);\n        result.minus = result.minus ? result.minus + 1 : 1;\n      }\n    });\n\n    if (!result.minus && !result.plus) {\n      result.missed = true;\n    }\n\n    var guess = {\n      value: guessArray,\n      round: guesses.length,\n      result: result,\n      passed: true\n    };\n    var newList = guesses.concat();\n    newList.pop();\n    newList.push(guess);\n\n    if (result.plus === digits || rounds === guesses.length) {\n      endGame(result.plus === digits);\n      scrollTop();\n    } else {\n      if (!rounds || guesses.length < rounds) {\n        newList.push(_objectSpread({}, defaultGuess, {\n          round: guesses.length + 1\n        }));\n      }\n    }\n\n    setGuesses(newList);\n  };\n\n  var remainingRounds = rounds - guesses.length;\n  var myMessage = !gameResult ? gameStarted ? \"You have \".concat(rounds === 0 ? 'unlimited' : rounds, \" rounds to guess my number. Start writing your guess and see the results ;)\") : 'Set your preferences and start playing!' : \"You have \".concat(gameResult, \"!\");\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: cx({\n      'hidden': !partyModeOn\n    }, 'w-full h-full top-0 left-0'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, __jsx(PartyBackground, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 85\n    }\n  })), __jsx(\"div\", {\n    className: \"px-4 py-6 lg:px-20 md:py-8 shadow bg-white w-full sm-grid-sm md:w-grid-md lg:w-grid-lg xl:w-grid-xl mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"nes-container custom-padding with-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"A Cool's Game\"), __jsx(\"div\", {\n    className: \" ml-12 md:ml-20 mt-12 md:mt-8 flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"nes-balloon from-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    className: \"text-sm md:text-base\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, myMessage))), __jsx(\"i\", {\n    className: \"-mt-8 nes-octocat animate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }), gameResult === 'won' && __jsx(Confetti, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 37\n    }\n  }), __jsx(SettingsTool, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), __jsx(NumberSign, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), gameStarted && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }, guesses.map(returnGuessRow), __jsx(\"div\", {\n    className: \"pt-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    onClick: resetGame,\n    label: \"Reset game\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 39\n    }\n  }))))), __jsx(\"label\", {\n    className: \"w-full text-right mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    className: \"nes-checkbox is-dark\",\n    checked: partyModeOn,\n    onChange: function onChange() {\n      return setPartyModeOn(function (prevMode) {\n        return !prevMode;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"Enable party mode\")));\n}","map":{"version":3,"sources":["/Users/slnsrn/Documents/Projects/MyGames/GuessNumber/guess-my-number/components/GameBoard.tsx"],"names":["useContext","useState","useEffect","cx","GameContext","useUtils","GuessRow","Button","SettingsTool","NumberSign","PartyBackground","Confetti","defaultGuess","value","round","result","passed","createControlArray","numberArray","map","n","checked","GameBoard","digits","rounds","gameStarted","resetGame","endGame","gameResult","setWindowValues","guesses","setGuesses","partyModeOn","setPartyModeOn","scrollTop","returnGuessRow","guess","guessNumber","length","window","set","guessArray","controlArray","remaining","val","i","plus","filter","el","includes","index","findIndex","splice","minus","missed","newList","concat","pop","push","remainingRounds","myMessage","prevMode"],"mappings":"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","sourcesContent":["import { useContext, useState, useEffect } from 'react'\nimport cx from 'classnames'\n\nimport {GameContext} from '../context/GameContext'\nimport useUtils from '../hooks/useUtils'\n\nimport GuessRow from './GuessRow'\nimport Button from './Button'\nimport SettingsTool from './SettingsTool'\nimport NumberSign from './NumberSign'\nimport PartyBackground from './PartyBackground'\nimport Confetti from './Confetti'\n\nimport Guess from '../types/Guess'\nimport GuessResult from '../types/GuessResult'\n\n\nconst defaultGuess:Guess = {value:[], round:1, result:{}, passed:false}\n\nconst createControlArray =(numberArray:{value: string, hidden:boolean}[])=>{\n    return numberArray.map((n)=>{\n        return { value:n.value, checked:false}\n    })\n}\n\nexport default function GameBoard (){\n    const { digits, rounds, gameStarted, resetGame, numberArray, endGame, gameResult, setWindowValues} = useContext(GameContext)\n    const [guesses, setGuesses] = useState<Guess[]>([{...defaultGuess}])\n    const [partyModeOn, setPartyModeOn] = useState(false)\n    const { scrollTop } =useUtils()\n\n    const returnGuessRow = (guess:Guess)=> <GuessRow key={guess.round} guess={guess} guessNumber={guessNumber} currentRound={guesses.length}/>\n\n    useEffect(()=>{\n        if(window){\n            set\n        }\n    },[])\n\n    useEffect(()=>{\n        //reset the game\n        setGuesses([{...defaultGuess}])\n\n    },[gameStarted])\n\n\n    const guessNumber =(guessArray:string[])=>{\n        const controlArray = createControlArray(numberArray!)\n        let result:GuessResult={}\n\n        const remaining = guessArray.map((val:string, i:number)=>{\n            if(val === controlArray[i].value){\n                controlArray[i].checked = true\n                result.plus = result.plus? result.plus + 1 : 1\n            }else{\n                return val\n            }\n        })\n\n        controlArray.filter(el=>!el.checked).map(el=>{\n            if(remaining.includes(el.value)){\n                const index = remaining.findIndex(n=>n===el.value)\n                remaining.splice(index,1)\n                result.minus = result.minus? result.minus + 1 : 1\n            }\n        })\n\n        if(!result.minus && !result.plus){result.missed=true}\n\n        const guess:Guess = {\n            value: guessArray,\n            round: guesses.length,\n            result:result,\n            passed:true\n        }\n\n        const newList:Guess[]= guesses.concat()\n        newList.pop()\n        newList.push(guess)\n\n\n        if(result.plus === digits || rounds === guesses.length){\n            endGame(result.plus === digits)\n            scrollTop()\n        }else{\n            if(!rounds || guesses.length < rounds){\n                newList.push({...defaultGuess, round:guesses.length+1})\n            }\n        }\n\n        setGuesses(newList)\n\n    }\n    const remainingRounds = rounds - guesses.length\n\n    const myMessage = !gameResult\n                        ? ( gameStarted\n                                ? `You have ${rounds === 0 ? 'unlimited' : rounds} rounds to guess my number. Start writing your guess and see the results ;)`\n                                :'Set your preferences and start playing!')\n                        : `You have ${gameResult}!`\n\n  return (\n    <>\n        <div className={cx({'hidden': !partyModeOn}, 'w-full h-full top-0 left-0')}><PartyBackground/></div>\n        <div className='px-4 py-6 lg:px-20 md:py-8 shadow bg-white w-full sm-grid-sm md:w-grid-md lg:w-grid-lg xl:w-grid-xl mx-auto'>\n            <div className=\"nes-container custom-padding with-title\">\n                <p className=\"title\">A Cool's Game</p>\n                <div className=\" ml-12 md:ml-20 mt-12 md:mt-8 flex\">\n                    <div className=\"nes-balloon from-left\">\n                        <p className='text-sm md:text-base'>{myMessage}</p>\n                    </div>\n                </div>\n            <i className=\"-mt-8 nes-octocat animate\"></i>\n            {gameResult ==='won' && <Confetti/>}\n            <SettingsTool/>\n            <NumberSign/>\n            {gameStarted && <div>\n                {guesses.map(returnGuessRow)}\n                <div className='pt-8'><Button onClick={resetGame} label='Reset game'/></div>\n            </div>\n            }\n            </div>\n        </div>\n        <label className=\"w-full text-right mt-4\">\n            <input type=\"checkbox\" className=\"nes-checkbox is-dark\" checked={partyModeOn} onChange={()=>setPartyModeOn(prevMode=>{return !prevMode})} />\n            <span>Enable party mode</span>\n         </label>\n    </>)\n}"]},"metadata":{},"sourceType":"module"}