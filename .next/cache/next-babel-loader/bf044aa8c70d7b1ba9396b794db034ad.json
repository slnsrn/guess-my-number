{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/slnsrn/Documents/Projects/MyGames/GuessNumber/guess-my-number/components/GuessRow.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState, useEffect } from 'react';\nimport cx from 'classnames';\nimport { GameContext } from '../context/GameContext';\nexport default function GuessRow(_ref) {\n  var guess = _ref.guess,\n      guessNumber = _ref.guessNumber,\n      currentRound = _ref.currentRound;\n\n  var _useContext = useContext(GameContext),\n      digits = _useContext.digits,\n      giveHint = _useContext.giveHint,\n      hintsGiven = _useContext.hintsGiven;\n\n  var round = guess.round,\n      result = guess.result,\n      value = guess.value,\n      passed = guess.passed;\n\n  var _useState = useState(value),\n      inputValue = _useState[0],\n      setInputValue = _useState[1];\n\n  var _useState2 = useState(false),\n      hintGiven = _useState2[0],\n      setHintGiven = _useState2[1];\n\n  var inputRef = React.createRef();\n\n  var handleUserKeyPress = function handleUserKeyPress(event) {\n    var keyCode = event.keyCode;\n\n    if (keyCode === 13 && !passed && inputValue.length === digits) {\n      guessNumber(inputValue);\n    }\n  };\n\n  useEffect(function () {\n    window.addEventListener(\"keydown\", handleUserKeyPress);\n    return function () {\n      window.removeEventListener(\"keydown\", handleUserKeyPress);\n    };\n  }, [handleUserKeyPress]);\n\n  var handleChange = function handleChange(value) {\n    value = value.replace(/\\D/g, '');\n    setInputValue(Array.from(value));\n  };\n\n  var handleClick = function handleClick() {\n    if (inputValue.length !== digits) return false;\n    guessNumber(inputValue);\n  };\n\n  var onHintClick = function onHintClick() {\n    setHintGiven(true);\n    giveHint();\n  };\n\n  var onFocus = function onFocus() {\n    if (inputValue.length === 0 && hintGiven) {\n      setInputValue(_toConsumableArray(hintsGiven));\n    }\n  };\n\n  var placeholder = Array.from({\n    length: digits\n  }, function (item, i) {\n    return hintsGiven[i] || 'X';\n  }).join(' ');\n  var id = \"guessInput\".concat(round);\n  var showHint = !passed && !hintGiven && hintsGiven.length < digits - 1;\n  return __jsx(\"div\", {\n    className: cx({\n      'relative pb-32': currentRound > 2\n    }, 'flex flex-col sm:flex-row mx-auto'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"w-56 mr-2 lg:mr-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    autoFocus: true,\n    autoComplete: \"off\",\n    ref: inputRef,\n    className: \"nes-input focus:outline-none text-center custom-padding\",\n    disabled: passed,\n    type: \"tel\",\n    placeholder: placeholder,\n    id: id,\n    value: inputValue.join(' '),\n    onChange: function onChange(event) {\n      return handleChange(event.target.value);\n    },\n    maxLength: digits * 2 - 1,\n    onFocus: onFocus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  })), !passed && __jsx(\"img\", {\n    src: \"press.png\",\n    className: \"w-auto h-10 md:h-12\",\n    style: {\n      imageRendering: 'pixelated'\n    },\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), currentRound > 2 && __jsx(\"div\", {\n    className: \"nes-balloon hint from-right text-xs bottom-0 right-0 flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Do you need a hint?\"), showHint && __jsx(\"img\", {\n    src: \"hint.png\",\n    className: \" w-auto h-8 md:h-10  md:ml-2 self-center animateOpacity\",\n    style: {\n      imageRendering: 'pixelated'\n    },\n    onClick: onHintClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  }))), passed && __jsx(\"div\", {\n    className: \"text-left flex flex-col sm:flex-row mt-2 lg:mt-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, result.missed && __jsx(\"div\", {\n    className: \"self-center nes-badge wide custom-font-size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, __jsx(\"span\", {\n    className: \"is-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 94\n    }\n  }, \"Ups! you missed it!\")), result.plus && __jsx(\"div\", {\n    className: \"self-center nes-badge plus custom-font-size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 31\n    }\n  }, __jsx(\"span\", {\n    className: \"is-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 92\n    }\n  }, \"\".concat(result.plus, \" cuk!\"))), result.minus && __jsx(\"div\", {\n    className: \"self-center nes-badge wide custom-font-size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 32\n    }\n  }, __jsx(\"span\", {\n    className: \"is-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 93\n    }\n  }, \"\".concat(result.minus, \" position wrong!\")))));\n}","map":{"version":3,"sources":["/Users/slnsrn/Documents/Projects/MyGames/GuessNumber/guess-my-number/components/GuessRow.tsx"],"names":["React","useContext","useState","useEffect","cx","GameContext","GuessRow","guess","guessNumber","currentRound","digits","giveHint","hintsGiven","round","result","value","passed","inputValue","setInputValue","hintGiven","setHintGiven","inputRef","createRef","handleUserKeyPress","event","keyCode","length","window","addEventListener","removeEventListener","handleChange","replace","Array","from","handleClick","onHintClick","onFocus","placeholder","item","i","join","id","showHint","target","imageRendering","missed","plus","minus"],"mappings":"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","sourcesContent":["\nimport React, { useContext, useState, useEffect } from 'react'\nimport cx from 'classnames'\n\nimport {GameContext} from '../context/GameContext'\nimport Guess from '../types/Guess'\n\nexport default function GuessRow ({guess, guessNumber, currentRound}:{guess:Guess, currentRound:number, guessNumber: (value:string[])=>void}){\n  const { digits, giveHint, hintsGiven} = useContext(GameContext)\n  const {round, result, value, passed} = guess\n  const [inputValue, setInputValue]=useState<string[]>(value)\n  const [hintGiven, setHintGiven]=useState(false)\n  const inputRef = React.createRef<HTMLInputElement>()\n\n    const handleUserKeyPress = (event:KeyboardEvent) => {\n      const { keyCode } = event\n      if (keyCode === 13 && !passed && inputValue.length === digits) {\n        guessNumber(inputValue)\n      }\n    }\n\n    useEffect(() => {\n      window.addEventListener(\"keydown\", handleUserKeyPress);\n\n      return () => {\n        window.removeEventListener(\"keydown\", handleUserKeyPress);\n      };\n    }, [handleUserKeyPress])\n\n    const handleChange = (value: string)=>{\n      value = value.replace(/\\D/g, '')\n      setInputValue(Array.from(value))\n    }\n\n    const handleClick =()=>{\n      if(inputValue.length !== digits) return false\n      guessNumber(inputValue)\n    }\n\n    const onHintClick = ()=>{\n      setHintGiven(true)\n      giveHint()\n    }\n\n    const onFocus= ()=>{\n      if(inputValue.length ===0 && hintGiven){setInputValue([...hintsGiven])}\n    }\n\n    const placeholder = Array.from({length:digits},(item,i)=>hintsGiven[i]||'X').join(' ')\n\n    const id=`guessInput${round}`\n    const showHint = !passed && !hintGiven &&  hintsGiven.length < digits-1\n\n    return (\n      <div className={cx({'relative pb-32': currentRound >2},'flex flex-col sm:flex-row mx-auto')}>\n          <div className='flex'>\n            <div className='w-56 mr-2 lg:mr-4'>\n              <input\n                autoFocus\n                autoComplete='off'\n                ref={inputRef}\n                className='nes-input focus:outline-none text-center custom-padding'\n                disabled={passed}\n                type='tel'\n                placeholder={placeholder}\n                id={id}\n                value={inputValue.join(' ')}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => handleChange(event.target.value)}\n                maxLength={digits*2-1}\n                onFocus={onFocus}\n              />\n            </div>\n            {!passed &&\n                <img src='press.png' className='w-auto h-10 md:h-12' style={{imageRendering: 'pixelated'}} onClick={handleClick}></img>}\n            {currentRound >2 &&\n                  <div className=\"nes-balloon hint from-right text-xs bottom-0 right-0 flex\">\n                    <p>Do you need a hint?</p>\n                    {showHint &&<img src='hint.png' className=\" w-auto h-8 md:h-10  md:ml-2 self-center animateOpacity\" style={{imageRendering: 'pixelated'}} onClick={onHintClick}></img>}\n                </div>}\n          </div>\n          {passed &&\n            <div className='text-left flex flex-col sm:flex-row mt-2 lg:mt-0'>\n              {result.missed && <div className='self-center nes-badge wide custom-font-size'><span className=\"is-error\">Ups! you missed it!</span></div>}\n              {result.plus && <div className='self-center nes-badge plus custom-font-size'><span className=\"is-success\">{`${result.plus} cuk!`}</span></div>}\n              {result.minus && <div className='self-center nes-badge wide custom-font-size'><span className=\"is-warning\">{`${result.minus} position wrong!`}</span></div>}\n            </div>}\n      </div>)\n}\n\n"]},"metadata":{},"sourceType":"module"}