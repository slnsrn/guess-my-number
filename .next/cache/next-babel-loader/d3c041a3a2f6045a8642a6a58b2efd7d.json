{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n        height: \", \"em;\\n        transition-duration:.45s;\\n        display:inline-block;\\n        transition-duration:1.4s;\\n        transition-timing-function: cubic-bezier(.43,-0.28,.25,1.37);\\n        font-size: \", \"px;\\n        background:  \", \";\\n        opacity: \", \";\\n        animation: \", \" 1s infinite;\\n    \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n        left: \", \"px;\\n        top: \", \"px;\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    color: \", \";\\n    background-color: \", \";\\n    box-shadow: 0 0.5em \", \", 0 -0.5em \", \", 0.5em 0 \", \", -0.5em 0 \", \";\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { rnd } from '../utils';\nimport { useMemo, useEffect, useState } from 'react';\nimport debounce from 'lodash/debounce';\nvar colors = ['#e76e55', '#FF00CC', '#EE34D2', '#FF6EFF', '#50BFE6', '#AAF0D1', '#66FF66', '#CCFF00', '#FFFF66', '#FFFF66', '#FFCC33', '#FF9933', '#FF9966', '#FF6037', '#FD5B78', '#FF355E'];\nvar animation = ['shine2', 'shine1', 'shine3'];\n\nvar createBall = function createBall(windowValues) {\n  var w = rnd(0.5, 1);\n  var h = rnd(0.5, 1);\n  var color = colors[Math.floor(Math.random() * colors.length)];\n  var spanCss = css(_templateObject(), color, color, color, color, color, color);\n  var containerCss = css(_templateObject2(), Math.random() * (window.innerWidth - 2), Math.random() * (window.innerHeight - 2));\n  var ballCss = css(_templateObject3(), h, rnd(6, 10), color, Math.random(), animation[rnd(0, 2)]);\n  return jsx(\"div\", {\n    key: Math.random(),\n    className: \"absolute\",\n    css: containerCss\n  }, jsx(\"div\", {\n    css: ballCss,\n    className: \"ball\"\n  }, jsx(\"span\", {\n    css: spanCss\n  }, \"1\")));\n};\n\nexport default function PartyBackground() {\n  var _useState = useState(function () {\n    return true ? {\n      w: window.innerWidth,\n      h: window.innerHeight\n    } : {\n      w: 0,\n      h: 0\n    };\n  }),\n      windowSize = _useState[0],\n      setWindowSize = _useState[1];\n\n  var balls = useMemo(function () {\n    if (true) {\n      return Array.from({\n        length: 400\n      }, function (item) {\n        return createBall(windowSize);\n      });\n    } else {\n      return [];\n    }\n  }, [windowSize]);\n  useEffect(function () {\n    if (!true) return;\n    var handleResize = debounce(function () {\n      if (window.innerHeight > windowSize.h || window.innerWidth > windowSize.w) setWindowSize({\n        w: window.innerWidth,\n        h: window.innerHeight\n      });\n    }, 100);\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.cancel();\n      window.removeEventListener('resize', handleResize);\n    };\n  });\n  return jsx(\"div\", {\n    className: \"fixed top-0 left-0 z-1-\"\n  }, balls);\n}","map":null,"metadata":{},"sourceType":"module"}