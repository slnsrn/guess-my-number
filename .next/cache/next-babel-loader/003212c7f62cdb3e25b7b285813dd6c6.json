{"ast":null,"code":"var _jsxFileName = \"/Users/slnsrn/Documents/Projects/MyGames/GuessNumber/guess-my-number/components/GuessRow.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState, useEffect } from 'react';\nimport { GameContext } from '../context/GameContext';\nexport default function GuessRow(_ref) {\n  var guess = _ref.guess,\n      guessNumber = _ref.guessNumber;\n\n  var _useContext = useContext(GameContext),\n      digits = _useContext.digits;\n\n  var round = guess.round,\n      result = guess.result,\n      value = guess.value,\n      passed = guess.passed;\n\n  var _useState = useState(value),\n      inputValue = _useState[0],\n      setInputValue = _useState[1];\n\n  var inputRef = React.createRef();\n\n  var handleUserKeyPress = function handleUserKeyPress(event) {\n    var keyCode = event.keyCode;\n\n    if (keyCode === 13 && !passed && inputValue.length === digits) {\n      guessNumber(inputValue);\n    }\n  };\n\n  useEffect(function () {\n    window.addEventListener(\"keydown\", handleUserKeyPress);\n    return function () {\n      window.removeEventListener(\"keydown\", handleUserKeyPress);\n    };\n  }, [handleUserKeyPress]);\n\n  var handleChange = function handleChange(value) {\n    value = value.replace(/\\D/g, '');\n    setInputValue(Array.from(value));\n  };\n\n  var handleClick = function handleClick() {\n    if (inputValue.length !== digits) return false;\n    guessNumber(inputValue);\n  };\n\n  var id = \"guessInput\".concat(round);\n  return __jsx(\"div\", {\n    className: \"flex flex-col sm:flex-row mx-auto mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"w-56 mr-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    autoFocus: true,\n    autoComplete: \"off\",\n    ref: inputRef,\n    className: \"nes-input focus:outline-none text-center custom-padding\",\n    disabled: passed,\n    type: \"tel\",\n    placeholder: Array.from({\n      length: digits\n    }, function (item) {\n      return 'X';\n    }).join(' '),\n    id: id,\n    value: inputValue.join(' '),\n    onChange: function onChange(event) {\n      return handleChange(event.target.value);\n    },\n    maxLength: digits * 2 - 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  })), !passed && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }\n  })), passed && __jsx(\"div\", {\n    className: \"text-left flex flex-col sm:flex-row mt-2 lg:mt-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, result.missed && __jsx(\"div\", {\n    className: \"self-center nes-badge wide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 33\n    }\n  }, __jsx(\"span\", {\n    className: \"is-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 77\n    }\n  }, \"Ups! you missed it!\")), result.plus && __jsx(\"div\", {\n    className: \"self-center nes-badge plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 31\n    }\n  }, __jsx(\"span\", {\n    className: \"is-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 75\n    }\n  }, \"\".concat(result.plus, \" cuk!\"))), result.minus && __jsx(\"div\", {\n    className: \"self-center nes-badge wide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 32\n    }\n  }, __jsx(\"span\", {\n    className: \"is-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 76\n    }\n  }, \"\".concat(result.minus, \" position wrong!\")))));\n}","map":{"version":3,"sources":["/Users/slnsrn/Documents/Projects/MyGames/GuessNumber/guess-my-number/components/GuessRow.tsx"],"names":["React","useContext","useState","useEffect","GameContext","GuessRow","guess","guessNumber","digits","round","result","value","passed","inputValue","setInputValue","inputRef","createRef","handleUserKeyPress","event","keyCode","length","window","addEventListener","removeEventListener","handleChange","replace","Array","from","handleClick","id","item","join","target","missed","plus","minus"],"mappings":"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","sourcesContent":["\nimport React, { useContext, useState, useEffect } from 'react'\n\n\nimport {GameContext} from '../context/GameContext'\nimport Guess from '../types/Guess'\n\n\nexport default function GuessRow ({guess, guessNumber}:{guess:Guess, guessNumber: (value:string[])=>void}){\n    const { digits} = useContext(GameContext)\n    const {round, result, value, passed} = guess\n    const [inputValue, setInputValue]=useState<string[]>(value)\n    const inputRef = React.createRef<HTMLInputElement>()\n\n    const handleUserKeyPress = (event:KeyboardEvent) => {\n      const { keyCode } = event\n      if (keyCode === 13 && !passed && inputValue.length === digits) {\n        guessNumber(inputValue)\n      }\n    }\n\n    useEffect(() => {\n      window.addEventListener(\"keydown\", handleUserKeyPress);\n\n      return () => {\n        window.removeEventListener(\"keydown\", handleUserKeyPress);\n      };\n    }, [handleUserKeyPress])\n\n    const handleChange = (value: string)=>{\n      value = value.replace(/\\D/g, '')\n      setInputValue(Array.from(value))\n    }\n\n    const handleClick =()=>{\n      if(inputValue.length !== digits) return false\n      guessNumber(inputValue)\n    }\n\n    const id=`guessInput${round}`\n\n    return (\n      <div className='flex flex-col sm:flex-row mx-auto mb-6'>\n          <div className='flex'>\n          <div className='w-56 mr-4'>\n            <input\n              autoFocus\n              autoComplete='off'\n              ref={inputRef}\n              className='nes-input focus:outline-none text-center custom-padding'\n              disabled={passed}\n              type='tel'\n              placeholder={Array.from({length: digits}, (item)=>'X').join(' ')}\n              id={id}\n              value={inputValue.join(' ')}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => handleChange(event.target.value)}\n              maxLength={digits*2-1}\n            />\n          </div>\n          {!passed && <div></div>}\n          {}\n          </div>\n          {passed &&\n            <div className='text-left flex flex-col sm:flex-row mt-2 lg:mt-0'>\n              {result.missed && <div className='self-center nes-badge wide'><span className=\"is-error\">Ups! you missed it!</span></div>}\n              {result.plus && <div className='self-center nes-badge plus'><span className=\"is-success\">{`${result.plus} cuk!`}</span></div>}\n              {result.minus && <div className='self-center nes-badge wide'><span className=\"is-warning\">{`${result.minus} position wrong!`}</span></div>}\n            </div>}\n      </div>)\n}"]},"metadata":{},"sourceType":"module"}