{"ast":null,"code":"import { useEffect, useState } from 'react';\nexport default function useUtils() {\n  const {\n    0: windowWidth,\n    1: setWindowWidth\n  } = useState(null);\n  const {\n    0: windowHeight,\n    1: setWindowHeight\n  } = useState(null);\n  useEffect(() => {\n    if (window) {\n      setWindowWidth(window.innerWidth);\n      setWindowHeight(window.innerHeight);\n    }\n  }, []);\n\n  const scrollTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n\n  const rnd = (m, n) => Math.floor(Math.random() * (n - m + 1)) + m;\n\n  return {\n    windowWidth,\n    windowHeight,\n    scrollTop\n  };\n}","map":{"version":3,"sources":["/Users/slnsrn/Documents/Projects/MyGames/GuessNumber/guess-my-number/hooks/useUtils.ts"],"names":["useEffect","useState","useUtils","windowWidth","setWindowWidth","windowHeight","setWindowHeight","window","innerWidth","innerHeight","scrollTop","scrollTo","top","behavior","rnd","m","n","Math","floor","random"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,GAAoB;AAE/B,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCH,QAAQ,CAAc,IAAd,CAA9C;AACA,QAAM;AAAA,OAACI,YAAD;AAAA,OAAeC;AAAf,MAAkCL,QAAQ,CAAc,IAAd,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGO,MAAH,EAAU;AACNH,MAAAA,cAAc,CAACG,MAAM,CAACC,UAAR,CAAd;AACAF,MAAAA,eAAe,CAACC,MAAM,CAACE,WAAR,CAAf;AACH;AACJ,GALQ,EAKP,EALO,CAAT;;AAOA,QAAMC,SAAS,GAAE,MAAK;AAClBH,IAAAA,MAAM,CAACI,QAAP,CAAgB;AAACC,MAAAA,GAAG,EAAE,CAAN;AAASC,MAAAA,QAAQ,EAAE;AAAnB,KAAhB;AACH,GAFD;;AAIA,QAAMC,GAAG,GAAG,CAACC,CAAD,EAAUC,CAAV,KAAsBC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,MAAiBH,CAAC,GAAGD,CAAJ,GAAQ,CAAzB,CAAZ,IAA4CA,CAA9E;;AAEA,SAAO;AAACZ,IAAAA,WAAD;AAAcE,IAAAA,YAAd;AAA4BK,IAAAA;AAA5B,GAAP;AACH","sourcesContent":["import { useEffect, useState } from 'react'\n\nexport default function useUtils (){\n\n    const [windowWidth, setWindowWidth ] =useState<number|null>(null)\n    const [windowHeight, setWindowHeight ] =useState<number|null>(null)\n\n    useEffect(()=>{\n        if(window){\n            setWindowWidth(window.innerWidth)\n            setWindowHeight(window.innerHeight)\n        }\n    },[])\n\n    const scrollTop =() =>{\n        window.scrollTo({top: 0, behavior: 'smooth'})\n    }\n\n    const rnd = (m:number,n:number)=>(Math.floor( Math.random() * (n - m + 1) ) + m)\n\n    return {windowWidth, windowHeight, scrollTop}\n}"]},"metadata":{},"sourceType":"module"}