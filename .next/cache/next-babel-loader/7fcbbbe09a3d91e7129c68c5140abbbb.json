{"ast":null,"code":"var _jsxFileName = \"/Users/slnsrn/Documents/Projects/MyGames/GuessNumber/guess-my-number/components/SettingsTool.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport Button from './Button';\nconst availableDigits = [3, 4, 5, 6];\nconst availableRounds = [0, 6, 8, 10];\nexport default function SettingsTool() {\n  const {\n    digits,\n    setDigits,\n    startGame,\n    rounds,\n    setRounds,\n    gameStarted\n  } = useContext(GameContext);\n\n  const digitChoices = __jsx(\"div\", {\n    className: \"my-4 w-full sm:w-1/2 md:w-full flex flex-col md:flex-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 27\n    }\n  }, __jsx(\"span\", {\n    className: \"mr-2 md:mr-4 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"Digits:\"), availableDigits.map(digit => __jsx(\"label\", {\n    key: digit,\n    className: \"md:mr-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 39\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    className: \"nes-radio\",\n    checked: digit === digits,\n    onChange: event => {\n      setDigits(parseInt(event.target.value));\n    },\n    value: digit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 78\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 283\n    }\n  }, `${digit} digits`))));\n\n  const roundChoices = __jsx(\"div\", {\n    className: \"my-4 w-full sm:w-1/2 md:w-full flex flex-col md:flex-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 27\n    }\n  }, __jsx(\"span\", {\n    className: \"mr-2 md:mr-4 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Rounds:\"), availableRounds.map(round => __jsx(\"label\", {\n    key: round,\n    className: \" md:mr-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 39\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    className: \"nes-radio\",\n    checked: round === rounds,\n    onChange: event => {\n      setRounds(parseInt(event.target.value));\n    },\n    value: round,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 79\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 283\n    }\n  }, round === 0 ? 'unlimited' : `${round} rounds`))));\n\n  const handleClick = () => {\n    scrollTop();\n    startGame();\n  };\n\n  return __jsx(\"div\", {\n    className: \"mt-4 w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }\n  }, !gameStarted && __jsx(\"div\", {\n    className: \"w-full flex flex-col md:flex-col\",\n    style: {\n      opacity: 1,\n      transition: 'opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }\n  }, digitChoices, roundChoices), !gameStarted && __jsx(Button, {\n    onClick: startGame,\n    label: \"Start game\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 30\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/slnsrn/Documents/Projects/MyGames/GuessNumber/guess-my-number/components/SettingsTool.tsx"],"names":["useContext","GameContext","Button","availableDigits","availableRounds","SettingsTool","digits","setDigits","startGame","rounds","setRounds","gameStarted","digitChoices","map","digit","event","parseInt","target","value","roundChoices","round","handleClick","scrollTop","opacity","transition"],"mappings":"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","sourcesContent":["import { useContext } from 'react'\n\nimport {GameContext} from '../context/GameContext'\nimport Digit from '../types/Digit'\nimport Round from '../types/Round'\nimport Button from './Button'\n\nconst availableDigits: Digit[]=[3,4,5,6]\nconst availableRounds: Round[] = [0, 6, 8, 10]\n\n\nexport default function SettingsTool () {\n    const {digits, setDigits, startGame, rounds, setRounds, gameStarted} = useContext(GameContext)\n\n    const digitChoices = (<div className='my-4 w-full sm:w-1/2 md:w-full flex flex-col md:flex-row'>\n        <span className='mr-2 md:mr-4 mb-2'>Digits:</span>\n        {availableDigits.map(digit=>( <label key={digit} className='md:mr-4'><input type=\"radio\" className=\"nes-radio\"  checked={digit===digits} onChange={(event: React.ChangeEvent<HTMLInputElement>)=> {setDigits(parseInt((event.target as HTMLInputElement).value))}} value={digit}/><span>{`${digit} digits`}</span></label>))}\n    </div>)\n\n    const roundChoices = (<div className='my-4 w-full sm:w-1/2 md:w-full flex flex-col md:flex-row'>\n        <span className='mr-2 md:mr-4 mb-2'>Rounds:</span>\n        {availableRounds.map(round=>( <label key={round} className=' md:mr-4'><input type=\"radio\" className=\"nes-radio\" checked={round===rounds} onChange={(event: React.ChangeEvent<HTMLInputElement>)=> {setRounds(parseInt((event.target as HTMLInputElement).value))}} value={round}/><span>{round === 0 ? 'unlimited' : `${round} rounds`}</span></label>))}\n    </div>)\n\n    const handleClick = ()=>{\n        scrollTop()\n        startGame()\n    }\n\n\n    return <div  className='mt-4 w-full'>\n            {!gameStarted &&\n               <div className='w-full flex flex-col md:flex-col' style={{opacity: 1, transition: 'opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'}}>\n                   {digitChoices}\n                   {roundChoices}\n               </div>}\n            {!gameStarted && <Button onClick={startGame} label='Start game'/>}\n        </div>\n\n}"]},"metadata":{},"sourceType":"module"}