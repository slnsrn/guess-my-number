{"ast":null,"code":"var _jsxFileName = \"/Users/slnsrn/Documents/Projects/MyGames/GuessNumber/guess-my-number/components/GuessRow.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState, useEffect } from 'react';\nimport { GameContext } from '../context/GameContext';\nexport default function GuessRow({\n  guess,\n  guessNumber,\n  currentRound\n}) {\n  const {\n    digits,\n    giveHint,\n    numberArray\n  } = useContext(GameContext);\n  const {\n    round,\n    result,\n    value,\n    passed\n  } = guess;\n  const {\n    0: inputValue,\n    1: setInputValue\n  } = useState(value);\n  const inputRef = React.createRef();\n  useEffect(() => {\n    const newValue = [];\n    numberArray === null || numberArray === void 0 ? void 0 : numberArray.map(number => {\n      if (!number.hidden) newValue.push(number.value);\n    });\n    setInputValue(newValue);\n  }, [numberArray]);\n\n  const handleUserKeyPress = event => {\n    const {\n      keyCode\n    } = event;\n\n    if (keyCode === 13 && !passed && inputValue.length === digits) {\n      guessNumber(inputValue);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleUserKeyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", handleUserKeyPress);\n    };\n  }, [handleUserKeyPress]);\n\n  const handleChange = value => {\n    value = value.replace(/\\D/g, '');\n    setInputValue(Array.from(value));\n  };\n\n  const handleClick = () => {\n    if (inputValue.length !== digits) return false;\n    guessNumber(inputValue);\n  };\n\n  const id = `guessInput${round}`;\n  const showHint = currentRound > 3 && numberArray && numberArray.filter(number => number.hidden).length > 1;\n  return __jsx(\"div\", {\n    className: \"flex flex-col sm:flex-row mx-auto mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"w-56 mr-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    autoFocus: true,\n    autoComplete: \"off\",\n    ref: inputRef,\n    className: \"nes-input focus:outline-none text-center custom-padding\",\n    disabled: passed,\n    type: \"tel\",\n    placeholder: Array.from({\n      length: digits\n    }, item => 'X').join(' '),\n    id: id,\n    value: inputValue.join(' '),\n    onChange: event => handleChange(event.target.value),\n    maxLength: digits * 2 - 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })), !passed && __jsx(\"div\", {\n    className: \"flex flex-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 23\n    }\n  }, __jsx(\"img\", {\n    src: \"press.png\",\n    className: \"ml-2 w-auto h-12\",\n    style: {\n      imageRendering: 'pixelated'\n    },\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), showHint && __jsx(\"img\", {\n    src: \"hint.png\",\n    className: \"ml-2 w-auto h-10 self-center animateOpacity\",\n    style: {\n      imageRendering: 'pixelated'\n    },\n    onClick: giveHint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 27\n    }\n  }))), passed && __jsx(\"div\", {\n    className: \"text-left flex flex-col sm:flex-row mt-2 lg:mt-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, result.missed && __jsx(\"div\", {\n    className: \"self-center nes-badge wide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }, __jsx(\"span\", {\n    className: \"is-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 77\n    }\n  }, \"Ups! you missed it!\")), result.plus && __jsx(\"div\", {\n    className: \"self-center nes-badge plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 31\n    }\n  }, __jsx(\"span\", {\n    className: \"is-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 75\n    }\n  }, `${result.plus} cuk!`)), result.minus && __jsx(\"div\", {\n    className: \"self-center nes-badge wide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 32\n    }\n  }, __jsx(\"span\", {\n    className: \"is-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 76\n    }\n  }, `${result.minus} position wrong!`))));\n}","map":{"version":3,"sources":["/Users/slnsrn/Documents/Projects/MyGames/GuessNumber/guess-my-number/components/GuessRow.tsx"],"names":["React","useContext","useState","useEffect","GameContext","GuessRow","guess","guessNumber","currentRound","digits","giveHint","numberArray","round","result","value","passed","inputValue","setInputValue","inputRef","createRef","newValue","map","number","hidden","push","handleUserKeyPress","event","keyCode","length","window","addEventListener","removeEventListener","handleChange","replace","Array","from","handleClick","id","showHint","filter","item","join","target","imageRendering","missed","plus","minus"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AAGA,SAAQC,WAAR,QAA0B,wBAA1B;AAIA,eAAe,SAASC,QAAT,CAAmB;AAACC,EAAAA,KAAD;AAAQC,EAAAA,WAAR;AAAqBC,EAAAA;AAArB,CAAnB,EAA8H;AACzI,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA;AAApB,MAAmCV,UAAU,CAACG,WAAD,CAAnD;AACA,QAAM;AAACQ,IAAAA,KAAD;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB,MAAiCT,KAAvC;AACA,QAAM;AAAA,OAACU,UAAD;AAAA,OAAaC;AAAb,MAA4Bf,QAAQ,CAAWY,KAAX,CAA1C;AACA,QAAMI,QAAQ,GAAGlB,KAAK,CAACmB,SAAN,EAAjB;AAEAhB,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMiB,QAAe,GAAC,EAAtB;AACAT,IAAAA,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEU,GAAb,CAAiBC,MAAM,IAAE;AACvB,UAAG,CAACA,MAAM,CAACC,MAAX,EAAmBH,QAAQ,CAACI,IAAT,CAAcF,MAAM,CAACR,KAArB;AACpB,KAFD;AAGAG,IAAAA,aAAa,CAACG,QAAD,CAAb;AACD,GANQ,EAMP,CAACT,WAAD,CANO,CAAT;;AAQA,QAAMc,kBAAkB,GAAIC,KAAD,IAAyB;AAClD,UAAM;AAAEC,MAAAA;AAAF,QAAcD,KAApB;;AACA,QAAIC,OAAO,KAAK,EAAZ,IAAkB,CAACZ,MAAnB,IAA6BC,UAAU,CAACY,MAAX,KAAsBnB,MAAvD,EAA+D;AAC7DF,MAAAA,WAAW,CAACS,UAAD,CAAX;AACD;AACF,GALD;;AAOAb,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCL,kBAAnC;AAEA,WAAO,MAAM;AACXI,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCN,kBAAtC;AACD,KAFD;AAGD,GANQ,EAMN,CAACA,kBAAD,CANM,CAAT;;AAQA,QAAMO,YAAY,GAAIlB,KAAD,IAAiB;AACpCA,IAAAA,KAAK,GAAGA,KAAK,CAACmB,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAR;AACAhB,IAAAA,aAAa,CAACiB,KAAK,CAACC,IAAN,CAAWrB,KAAX,CAAD,CAAb;AACD,GAHD;;AAKA,QAAMsB,WAAW,GAAE,MAAI;AACrB,QAAGpB,UAAU,CAACY,MAAX,KAAsBnB,MAAzB,EAAiC,OAAO,KAAP;AACjCF,IAAAA,WAAW,CAACS,UAAD,CAAX;AACD,GAHD;;AAKA,QAAMqB,EAAE,GAAE,aAAYzB,KAAM,EAA5B;AACA,QAAM0B,QAAQ,GAAG9B,YAAY,GAAG,CAAf,IAAoBG,WAApB,IAAmCA,WAAW,CAAC4B,MAAZ,CAAmBjB,MAAM,IAAEA,MAAM,CAACC,MAAlC,EAA2CK,MAA3C,GAAmD,CAAvG;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,MADX;AAEE,IAAA,YAAY,EAAC,KAFf;AAGE,IAAA,GAAG,EAAEV,QAHP;AAIE,IAAA,SAAS,EAAC,yDAJZ;AAKE,IAAA,QAAQ,EAAEH,MALZ;AAME,IAAA,IAAI,EAAC,KANP;AAOE,IAAA,WAAW,EAAEmB,KAAK,CAACC,IAAN,CAAW;AAACP,MAAAA,MAAM,EAAEnB;AAAT,KAAX,EAA8B+B,IAAD,IAAQ,GAArC,EAA0CC,IAA1C,CAA+C,GAA/C,CAPf;AAQE,IAAA,EAAE,EAAEJ,EARN;AASE,IAAA,KAAK,EAAErB,UAAU,CAACyB,IAAX,CAAgB,GAAhB,CATT;AAUE,IAAA,QAAQ,EAAGf,KAAD,IAAgDM,YAAY,CAACN,KAAK,CAACgB,MAAN,CAAa5B,KAAd,CAVxE;AAWE,IAAA,SAAS,EAAEL,MAAM,GAAC,CAAP,GAAS,CAXtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADA,EAgBC,CAACM,MAAD,IAAW;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACV;AAAK,IAAA,GAAG,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,kBAA/B;AAAkD,IAAA,KAAK,EAAE;AAAC4B,MAAAA,cAAc,EAAE;AAAjB,KAAzD;AAAwF,IAAA,OAAO,EAAEP,WAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADU,EAGTE,QAAQ,IAAK;AAAK,IAAA,GAAG,EAAC,UAAT;AAAoB,IAAA,SAAS,EAAC,6CAA9B;AAA4E,IAAA,KAAK,EAAE;AAACK,MAAAA,cAAc,EAAE;AAAjB,KAAnF;AAAkH,IAAA,OAAO,EAAEjC,QAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAhBZ,CADJ,EAuBKK,MAAM,IACL;AAAK,IAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,CAAC+B,MAAP,IAAiB;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4C;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA5C,CADpB,EAEG/B,MAAM,CAACgC,IAAP,IAAe;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4C;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+B,GAAEhC,MAAM,CAACgC,IAAK,OAA7C,CAA5C,CAFlB,EAGGhC,MAAM,CAACiC,KAAP,IAAgB;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4C;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+B,GAAEjC,MAAM,CAACiC,KAAM,kBAA9C,CAA5C,CAHnB,CAxBN,CADF;AA+BH","sourcesContent":["\nimport React, { useContext, useState, useEffect } from 'react'\n\n\nimport {GameContext} from '../context/GameContext'\nimport Guess from '../types/Guess'\n\n\nexport default function GuessRow ({guess, guessNumber, currentRound}:{guess:Guess, currentRound:number, guessNumber: (value:string[])=>void}){\n    const { digits, giveHint, numberArray} = useContext(GameContext)\n    const {round, result, value, passed} = guess\n    const [inputValue, setInputValue]=useState<string[]>(value)\n    const inputRef = React.createRef<HTMLInputElement>()\n\n    useEffect(()=>{\n      const newValue:string=[]\n      numberArray?.map(number=>{\n        if(!number.hidden) newValue.push(number.value)\n      })\n      setInputValue(newValue)\n    },[numberArray])\n\n    const handleUserKeyPress = (event:KeyboardEvent) => {\n      const { keyCode } = event\n      if (keyCode === 13 && !passed && inputValue.length === digits) {\n        guessNumber(inputValue)\n      }\n    }\n\n    useEffect(() => {\n      window.addEventListener(\"keydown\", handleUserKeyPress);\n\n      return () => {\n        window.removeEventListener(\"keydown\", handleUserKeyPress);\n      };\n    }, [handleUserKeyPress])\n\n    const handleChange = (value: string)=>{\n      value = value.replace(/\\D/g, '')\n      setInputValue(Array.from(value))\n    }\n\n    const handleClick =()=>{\n      if(inputValue.length !== digits) return false\n      guessNumber(inputValue)\n    }\n\n    const id=`guessInput${round}`\n    const showHint = currentRound > 3 && numberArray && numberArray.filter(number=>number.hidden)!.length >1\n\n    return (\n      <div className='flex flex-col sm:flex-row mx-auto mb-6'>\n          <div className='flex'>\n          <div className='w-56 mr-4'>\n            <input\n              autoFocus\n              autoComplete='off'\n              ref={inputRef}\n              className='nes-input focus:outline-none text-center custom-padding'\n              disabled={passed}\n              type='tel'\n              placeholder={Array.from({length: digits}, (item)=>'X').join(' ')}\n              id={id}\n              value={inputValue.join(' ')}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => handleChange(event.target.value)}\n              maxLength={digits*2-1}\n            />\n          </div>\n          {!passed && <div className='flex flex-row'>\n            <img src='press.png' className=\"ml-2 w-auto h-12\" style={{imageRendering: 'pixelated'}} onClick={handleClick}></img>\n\n            {showHint &&  <img src='hint.png' className=\"ml-2 w-auto h-10 self-center animateOpacity\" style={{imageRendering: 'pixelated'}} onClick={giveHint}></img>}\n            </div>}\n          </div>\n          {passed &&\n            <div className='text-left flex flex-col sm:flex-row mt-2 lg:mt-0'>\n              {result.missed && <div className='self-center nes-badge wide'><span className=\"is-error\">Ups! you missed it!</span></div>}\n              {result.plus && <div className='self-center nes-badge plus'><span className=\"is-success\">{`${result.plus} cuk!`}</span></div>}\n              {result.minus && <div className='self-center nes-badge wide'><span className=\"is-warning\">{`${result.minus} position wrong!`}</span></div>}\n            </div>}\n      </div>)\n}"]},"metadata":{},"sourceType":"module"}