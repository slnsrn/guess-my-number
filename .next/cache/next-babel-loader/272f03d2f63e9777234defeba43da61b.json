{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, useState, useEffect } from 'react';\nimport cx from 'classnames';\nimport { GameContext } from '../context/GameContext';\nexport default function GuessRow({\n  guess,\n  guessNumber,\n  currentRound\n}) {\n  const {\n    digits,\n    giveHint,\n    hintsGiven\n  } = useContext(GameContext);\n  const {\n    round,\n    result,\n    value,\n    passed\n  } = guess;\n  const {\n    0: inputValue,\n    1: setInputValue\n  } = useState(value);\n  const {\n    0: hintGiven,\n    1: setHintGiven\n  } = useState(false);\n  const inputRef = React.createRef();\n\n  const handleUserKeyPress = event => {\n    const {\n      keyCode\n    } = event;\n\n    if (keyCode === 13 && !passed && inputValue.length === digits) {\n      guessNumber(inputValue);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleUserKeyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", handleUserKeyPress);\n    };\n  }, [handleUserKeyPress]);\n\n  const handleChange = value => {\n    value = value.replace(/\\D/g, '');\n    setInputValue(Array.from(value));\n  };\n\n  const handleClick = () => {\n    if (inputValue.length !== digits) return false;\n    guessNumber(inputValue);\n  };\n\n  const onHintClick = () => {\n    setHintGiven(true);\n    giveHint();\n  };\n\n  const onFocus = () => {\n    if (inputValue.length === 0 && hintGiven) {\n      setInputValue([...hintsGiven]);\n    }\n  };\n\n  const placeholder = Array.from({\n    length: digits\n  }, (item, i) => hintsGiven[i] || 'X').join(' ');\n  const id = `guessInput${round}`;\n  const showHint = !passed && !hintGiven && currentRound > 2 && hintsGiven.length < digits - 1;\n  return __jsx(\"div\", {\n    className: cx({\n      'relative pb-32': currentRound > 2 && !passed\n    }, 'flex flex-col sm:flex-row mx-auto mb-4')\n  }, __jsx(\"div\", {\n    className: \"flex\"\n  }, __jsx(\"div\", {\n    className: \"w-56 mr-2 lg:mr-4\"\n  }, __jsx(\"input\", {\n    autoFocus: true,\n    autoComplete: \"off\",\n    ref: inputRef,\n    className: \"nes-input focus:outline-none text-center custom-padding\",\n    disabled: passed,\n    type: \"tel\",\n    placeholder: placeholder,\n    id: id,\n    value: inputValue.join(' '),\n    onChange: event => handleChange(event.target.value),\n    maxLength: digits * 2 - 1,\n    onFocus: onFocus\n  })), !passed && __jsx(\"img\", {\n    src: \"press.png\",\n    className: \"w-auto h-10 md:h-12\",\n    style: {\n      imageRendering: 'pixelated'\n    },\n    onClick: handleClick\n  }), showHint && __jsx(\"div\", {\n    className: \"nes-balloon hint from-right text-xs bottom-0 right-0 flex\"\n  }, __jsx(\"span\", {\n    className: \"self-center\"\n  }, \"Do you need a hint?\"), __jsx(\"img\", {\n    src: \"hint.png\",\n    className: \" w-auto h-8 md:h-10  md:ml-2 self-center animateOpacity\",\n    style: {\n      imageRendering: 'pixelated'\n    },\n    onClick: onHintClick\n  }))), passed && __jsx(\"div\", {\n    className: \"text-left flex flex-col sm:flex-row mt-2 lg:mt-0\"\n  }, result.missed && __jsx(\"div\", {\n    className: \"self-center nes-badge wide custom-font-size\"\n  }, __jsx(\"span\", {\n    className: \"is-error\"\n  }, \"Ups! you missed it!\")), result.plus && __jsx(\"div\", {\n    className: \"self-center nes-badge plus custom-font-size\"\n  }, __jsx(\"span\", {\n    className: \"is-success\"\n  }, `${result.plus} cuk!`)), result.minus && __jsx(\"div\", {\n    className: \"self-center nes-badge wide custom-font-size\"\n  }, __jsx(\"span\", {\n    className: \"is-warning\"\n  }, `${result.minus} position wrong!`))));\n}","map":null,"metadata":{},"sourceType":"module"}