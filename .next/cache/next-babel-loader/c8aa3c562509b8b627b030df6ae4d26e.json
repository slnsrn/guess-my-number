{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState, useEffect } from 'react';\nimport cx from 'classnames';\nimport { GameContext } from '../context/GameContext';\nexport default function GuessRow(_ref) {\n  var guess = _ref.guess,\n      guessNumber = _ref.guessNumber,\n      currentRound = _ref.currentRound;\n\n  var _useContext = useContext(GameContext),\n      digits = _useContext.digits,\n      giveHint = _useContext.giveHint,\n      hintsGiven = _useContext.hintsGiven;\n\n  var round = guess.round,\n      result = guess.result,\n      value = guess.value,\n      passed = guess.passed;\n\n  var _useState = useState(value),\n      inputValue = _useState[0],\n      setInputValue = _useState[1];\n\n  var _useState2 = useState(false),\n      hintGiven = _useState2[0],\n      setHintGiven = _useState2[1];\n\n  var inputRef = React.createRef();\n\n  var handleUserKeyPress = function handleUserKeyPress(event) {\n    var keyCode = event.keyCode;\n\n    if (keyCode === 13 && !passed && inputValue.length === digits) {\n      guessNumber(inputValue);\n    }\n  };\n\n  useEffect(function () {\n    window.addEventListener(\"keydown\", handleUserKeyPress);\n    return function () {\n      window.removeEventListener(\"keydown\", handleUserKeyPress);\n    };\n  }, [handleUserKeyPress]);\n\n  var handleChange = function handleChange(value) {\n    value = value.replace(/\\D/g, '');\n    setInputValue(Array.from(value));\n  };\n\n  var handleClick = function handleClick() {\n    if (inputValue.length !== digits) return false;\n    guessNumber(inputValue);\n  };\n\n  var onHintClick = function onHintClick() {\n    setHintGiven(true);\n    giveHint();\n  };\n\n  var onFocus = function onFocus() {\n    if (inputValue.length === 0 && hintGiven) {\n      setInputValue(_toConsumableArray(hintsGiven));\n    }\n  };\n\n  var placeholder = Array.from({\n    length: digits\n  }, function (item, i) {\n    return hintsGiven[i] || 'X';\n  }).join(' ');\n  var id = \"guessInput\".concat(round);\n  var showHint = !passed && !hintGiven && currentRound > 2 && hintsGiven.length < digits - 1;\n  return __jsx(\"div\", {\n    className: cx({\n      'relative pb-32': currentRound > 2 && !passed\n    }, 'flex flex-col sm:flex-row mx-auto mb-4')\n  }, __jsx(\"div\", {\n    className: \"flex\"\n  }, __jsx(\"div\", {\n    className: \"w-56 mr-2 lg:mr-4\"\n  }, __jsx(\"input\", {\n    autoFocus: true,\n    autoComplete: \"off\",\n    ref: inputRef,\n    className: \"nes-input focus:outline-none text-center custom-padding\",\n    disabled: passed,\n    type: \"tel\",\n    placeholder: placeholder,\n    id: id,\n    value: inputValue.join(' '),\n    onChange: function onChange(event) {\n      return handleChange(event.target.value);\n    },\n    maxLength: digits * 2 - 1,\n    onFocus: onFocus\n  })), !passed && __jsx(\"img\", {\n    src: \"press.png\",\n    className: \"w-auto h-10 md:h-12\",\n    style: {\n      imageRendering: 'pixelated'\n    },\n    onClick: handleClick\n  }), showHint && __jsx(\"div\", {\n    className: \"nes-balloon hint from-right text-xs bottom-0 right-0 flex\"\n  }, __jsx(\"span\", {\n    className: \"self-center\"\n  }, \"Do you need a hint?\"), __jsx(\"img\", {\n    src: \"hint.png\",\n    className: \" w-auto h-8 md:h-10  md:ml-2 self-center animateOpacity\",\n    style: {\n      imageRendering: 'pixelated'\n    },\n    onClick: onHintClick\n  }))), passed && __jsx(\"div\", {\n    className: \"text-left flex flex-col sm:flex-row mt-2 lg:mt-0\"\n  }, result.missed && __jsx(\"div\", {\n    className: \"self-center nes-badge wide custom-font-size\"\n  }, __jsx(\"span\", {\n    className: \"is-error\"\n  }, \"Ups! you missed it!\")), result.plus && __jsx(\"div\", {\n    className: \"self-center nes-badge plus custom-font-size\"\n  }, __jsx(\"span\", {\n    className: \"is-success\"\n  }, \"\".concat(result.plus, \" cuk!\"))), result.minus && __jsx(\"div\", {\n    className: \"self-center nes-badge wide custom-font-size\"\n  }, __jsx(\"span\", {\n    className: \"is-warning\"\n  }, \"\".concat(result.minus, \" position wrong!\")))));\n}","map":null,"metadata":{},"sourceType":"module"}